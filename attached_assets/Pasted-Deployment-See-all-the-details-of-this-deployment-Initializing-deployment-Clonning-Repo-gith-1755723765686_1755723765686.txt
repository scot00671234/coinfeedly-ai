Deployment
See all the details of this deployment | 

Initializing deployment
Clonning Repo github.com/scot00671234/AIForecast-Hub.git to /etc/dokploy/applications/aiforecast-hub-app-ywa0gl/code: ✅
Cloning into '/etc/dokploy/applications/aiforecast-hub-app-ywa0gl/code'...
remote: Enumerating objects: 214, done.
Cloned github.com/scot00671234/AIForecast-Hub.git: ✅
Build nixpacks: ✅
Source Type: github: ✅
╔══════════════════════════ Nixpacks v1.39.0 ═════════════════════════╗
║ setup      │ nodejs_18, npm-9_x, openssl                            ║
║─────────────────────────────────────────────────────────────────────║
║ caddy      │ pkgs: caddy                                            ║
║            │ cmds: caddy fmt --overwrite /assets/Caddyfile          ║
║─────────────────────────────────────────────────────────────────────║
║ install    │ npm ci --production=false                              ║
║─────────────────────────────────────────────────────────────────────║
║ build      │ echo 'CACHE BUST: Emergency migration fix v3.0.0'      ║
║            │ rm -rf dist                                            ║
║            │ npm run build                                          ║
║            │ node fix-build.js                                      ║
║            │ echo 'Build completed with migration fixes at $(date)' ║
║─────────────────────────────────────────────────────────────────────║
║ start      │ node production-start.js                               ║
╚═════════════════════════════════════════════════════════════════════╝
#0 building with "default" instance using docker driver
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.20kB done
#1 DONE 0.0s
#2 [internal] load metadata for ghcr.io/railwayapp/nixpacks:ubuntu-1745885067
#2 DONE 0.3s
#3 [internal] load .dockerignore
#3 transferring context: 784B done
#3 DONE 0.0s
#4 [stage-0  1/19] FROM ghcr.io/railwayapp/nixpacks:ubuntu-1745885067@sha256:d45c89d80e13d7ad0fd555b5130f22a866d9dd10e861f589932303ef2314c7de
#4 DONE 0.0s
#5 [internal] load build context
#5 transferring context: 4.08MB 0.1s done
#5 DONE 0.1s
#6 [stage-0  7/19] COPY .nixpacks/assets /assets/
#6 CACHED
#7 [stage-0 13/19] RUN --mount=type=cache,id=gN5wxUCTuE-node_modules/cache,target=/app/node_modules/.cache echo 'CACHE BUST: Emergency migration fix v3.0.0'
#7 CACHED
#8 [stage-0 18/19] RUN printf '\nPATH=/app/node_modules/.bin:$PATH' >> /root/.profile
#8 CACHED
#9 [stage-0 17/19] RUN --mount=type=cache,id=gN5wxUCTuE-node_modules/cache,target=/app/node_modules/.cache echo 'Build completed with migration fixes at $(date)'
#9 CACHED
#10 [stage-0  5/19] COPY .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix
#10 CACHED
#11 [stage-0 15/19] RUN --mount=type=cache,id=gN5wxUCTuE-node_modules/cache,target=/app/node_modules/.cache npm run build
#11 CACHED
#12 [stage-0 10/19] COPY . /app/.
#12 CACHED
#13 [stage-0  3/19] COPY .nixpacks/nixpkgs-ba913eda2df8eb72147259189d55932012df6301.nix .nixpacks/nixpkgs-ba913eda2df8eb72147259189d55932012df6301.nix
#13 CACHED
#14 [stage-0 12/19] COPY . /app/.
#14 CACHED
#15 [stage-0  4/19] RUN nix-env -if .nixpacks/nixpkgs-ba913eda2df8eb72147259189d55932012df6301.nix && nix-collect-garbage -d
#15 CACHED
#16 [stage-0  2/19] WORKDIR /app/
#16 CACHED
#17 [stage-0 11/19] RUN --mount=type=cache,id=gN5wxUCTuE-/root/npm,target=/root/.npm npm ci --production=false
#17 CACHED
#18 [stage-0  6/19] RUN nix-env -if .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix && nix-collect-garbage -d
#18 CACHED
#19 [stage-0 14/19] RUN --mount=type=cache,id=gN5wxUCTuE-node_modules/cache,target=/app/node_modules/.cache rm -rf dist
#19 CACHED
#20 [stage-0 16/19] RUN --mount=type=cache,id=gN5wxUCTuE-node_modules/cache,target=/app/node_modules/.cache node fix-build.js
#20 CACHED
#21 [stage-0  8/19] COPY . /app/.
#21 CACHED
#22 [stage-0  9/19] RUN  caddy fmt --overwrite /assets/Caddyfile
#22 CACHED
#23 [stage-0 19/19] COPY . /app
#23 CACHED
#24 exporting to image
#24 exporting layers done
#24 writing image sha256:4859cef7a30c03c5d7c62e85a40bd25acfb86363934f79b60c29f5744e72425b done
#24 naming to docker.io/library/aiforecast-hub-app-ywa0gl done
#24 DONE 0.0s
9 warnings found (use docker --debug to expand):
 - SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ARG "SESSION_SECRET") (line 13)
- SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ENV "ANTHROPIC_API_KEY") (line 14)
- SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ARG "ANTHROPIC_API_KEY") (line 13)
- SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ARG "DEEPSEEK_API_KEY") (line 13)
- SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ARG "OPENAI_API_KEY") (line 13)
- SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ENV "DEEPSEEK_API_KEY") (line 14)
- SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ENV "OPENAI_API_KEY") (line 14)
- SecretsUsedInArgOrEnv: Do not use ARG or ENV instructions for sensitive data (ENV "SESSION_SECRET") (line 14)
- UndefinedVar: Usage of undefined variable '$NIXPACKS_PATH' (line 24)
=== Successfully Built! ===
Run:
docker run -it aiforecast-hub-app-ywa0gl
Docker Deployed: ✅